"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElementNode = exports.TextNode = exports.CommentNode = void 0;
const type_1 = require("./type");
class CommentNode extends type_1.BaseNode {
    constructor(comment) {
        super(type_1.NODE_TYPES.COMMENT);
        this.comment = comment;
    }
    toJSON() {
        return {
            type: this.type,
            comment: this.comment,
        };
    }
}
exports.CommentNode = CommentNode;
class TextNode extends type_1.BaseNode {
    constructor(text, parentNode) {
        super(type_1.NODE_TYPES.TEXT);
        this.textContent = text;
        this.parentNode = parentNode;
    }
    toJSON() {
        return {
            type: this.type,
            textContent: this.textContent,
        };
    }
}
exports.TextNode = TextNode;
class ElementNode extends type_1.BaseNode {
    constructor({ tagName = "" } = {}) {
        super(type_1.NODE_TYPES.ELEMENT);
        this.tagName = tagName;
        this.attributes = {};
        this.childNodes = [];
        this.selfClosing = false;
        this.closing = false;
    }
    toJSON() {
        return {
            type: this.type,
            tagName: this.tagName,
            attributes: this.attributes,
            selfClosing: this.selfClosing,
            childNodes: this.childNodes.map(function (node) {
                return node.toJSON();
            }),
        };
    }
}
exports.ElementNode = ElementNode;
