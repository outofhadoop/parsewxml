{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://parsewxml/./src/parseTool.ts","webpack://parsewxml/./node_modules/wxml-parse/lib/common/index.js","webpack://parsewxml/./node_modules/wxml-parse/lib/generate.js","webpack://parsewxml/./node_modules/wxml-parse/lib/index.js","webpack://parsewxml/./node_modules/wxml-parse/lib/parse/check.js","webpack://parsewxml/./node_modules/wxml-parse/lib/parse/index.js","webpack://parsewxml/./node_modules/wxml-parse/lib/parse/nodes.js","webpack://parsewxml/./node_modules/wxml-parse/lib/parse/token.js","webpack://parsewxml/./node_modules/wxml-parse/lib/parse/traverse.js","webpack://parsewxml/./node_modules/wxml-parse/lib/parse/type.js","webpack://parsewxml/external commonjs \"vscode\"","webpack://parsewxml/webpack/bootstrap","webpack://parsewxml/./src/extension.ts"],"sourcesContent":["import { parse, generate, traverse, NODE_TYPES } from \"wxml-parse\";\r\nconst { window, Position, Range, workspace } = require(\"vscode\");\r\nlet editor, doc, text;\r\n\r\nexport const init = () => {\r\n  editor = window.activeTextEditor;\r\n  if (!editor) {\r\n    throw new Error(\"当前没有激活的页面！\");\r\n  }\r\n  doc = editor.document;\r\n  text = doc.getText();\r\n  let newText = '';\r\n  newText = generate(parse(text), {});\r\n\r\n  let start = new Position(0, 0);\r\n  let end = new Position(doc.lineCount + 1, 0);\r\n  let range = new Range(start, end);\r\n  editor.edit((editBuilder: string, error: any) => {\r\n      error && window.showErrorMessage(error);\r\n      editBuilder.replace(range, newText);\r\n  });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.throwError = exports.NOOP = void 0;\r\nconst NOOP = () => { };\r\nexports.NOOP = NOOP;\r\nfunction throwError(message) {\r\n    throw new Error(message);\r\n}\r\nexports.throwError = throwError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.generate = exports.genValueStr = void 0;\r\nconst type_1 = require(\"./parse/type\");\r\nconst filterEmptyText = (node) => !(node.type === type_1.NODE_TYPES.TEXT && !node.textContent.trim());\r\nconst genValueStr = (key, value, compress = false) => {\r\n    if (value === true) {\r\n        return key;\r\n    }\r\n    value = value.trim();\r\n    const space = compress ? \"\" : \" \";\r\n    const reg = /\\{\\{\\s*(.+)\\s*\\}\\}/g;\r\n    let temVal = /^(bind|catch).+/g.test(key)\r\n    let val;\r\n    if (temVal) {\r\n        val = value.replace(reg, (_, s) => s.trim())\r\n    } else {\r\n        if ((/^wx\\:.+/g.test(key) && /^wx\\:key/g.test(key) && !reg.test(value)) || (/^wx\\:.+/g.test(key) && /^wx\\:for\\-item/g.test(key) && !reg.test(value)) || (/^wx\\:.+/g.test(key) && /^wx\\:for\\-index/g.test(key) && !reg.test(value))) {\r\n            val = `${value}`\r\n        } else if (/^wx\\:.+/g.test(key) && !reg.test(value)) {\r\n            val = `{{${space}${value}${space}}}`\r\n        } else {\r\n            val = value\r\n        }\r\n    }\r\n    // const val = /^(bind|catch).+/g.test(key)\r\n    //     ? value.replace(reg, (_, s) => s.trim())\r\n    //     : /^wx\\:.+/g.test(key) && !reg.test(value)\r\n    //         ? `{{${space}${value}${space}}}`\r\n    //         : value;\r\n    return `${key}=\"${(compress\r\n        ? val\r\n        : val.replace(reg, (_, s) => `{{${space}${s.trim()}${space}}}`))}\"`;\r\n};\r\nexports.genValueStr = genValueStr;\r\nfunction _serialize(node, config = {}, prevTab = \"\\n\") {\r\n    var _a, _b;\r\n    const { maxWidth = 120, compress } = config;\r\n    let nextTab = prevTab + \"\\t\";\r\n    const serializeByType = {\r\n        [type_1.NODE_TYPES.TEXT](node) {\r\n            const text = node.textContent;\r\n            if (node.parentNode.tagName === \"text\")\r\n                return text;\r\n            return text.trim() || \"\";\r\n        },\r\n        [type_1.NODE_TYPES.COMMENT](node) {\r\n            if (compress)\r\n                return \"\";\r\n            return `<!--${node.comment}-->`;\r\n        },\r\n        [type_1.NODE_TYPES.ELEMENT](node) {\r\n            var _a;\r\n            const tagName = node.tagName || \"\";\r\n            const keys = Object.keys(node.attributes);\r\n            const attrs = keys.map((name) => {\r\n                return exports.genValueStr(name, node.attributes[name], compress);\r\n            });\r\n            let attrsString = attrs.join(\" \");\r\n            let isBreakAttr = !compress && (attrsString === null || attrsString === void 0 ? void 0 : attrsString.length) > maxWidth;\r\n            if (tagName === \"text\") {\r\n                prevTab = \"\";\r\n                nextTab = \"\";\r\n                isBreakAttr = false;\r\n            }\r\n            const beforeEndStr = isBreakAttr ? prevTab : \"\";\r\n            const beginTabEnd = beforeEndStr + \">\";\r\n            if (attrsString) {\r\n                if (isBreakAttr) {\r\n                    attrsString = nextTab + attrs.join(nextTab);\r\n                }\r\n                else {\r\n                    attrsString = \" \" + attrsString;\r\n                }\r\n            }\r\n            if (node.selfClosing) {\r\n                return `<${tagName}${attrsString}${isBreakAttr ? beforeEndStr : \" \"}/>`;\r\n            }\r\n            if (node.childNodes.length) {\r\n                const nodes = node.childNodes.filter(filterEmptyText);\r\n                const isSingleText = nodes.length === 1 &&\r\n                    nodes[0].type === type_1.NODE_TYPES.TEXT &&\r\n                    ((_a = nodes[0].textContent) === null || _a === void 0 ? void 0 : _a.length) < maxWidth;\r\n                let childNodesString = nodes\r\n                    .map((v) => {\r\n                    return _serialize(v, config, nextTab);\r\n                })\r\n                    .join(compress ? \"\" : nextTab);\r\n                if (!compress && childNodesString) {\r\n                    childNodesString =\r\n                        (isSingleText ? \"\" : nextTab) +\r\n                            childNodesString +\r\n                            (isSingleText ? \"\" : prevTab);\r\n                }\r\n                return `<${tagName || \"\"}${attrsString}${beginTabEnd}${childNodesString}</${tagName}>`;\r\n            }\r\n            return `<${tagName}${attrsString}${beginTabEnd}</${tagName}>`;\r\n        },\r\n        // [NODE_TYPES.CDATA_SECTION](node) {\r\n        //   throw new Error('Implement');\r\n        // },\r\n    };\r\n    if (serializeByType[node === null || node === void 0 ? void 0 : node.type]) {\r\n        return serializeByType[node.type](node);\r\n    }\r\n    const childNodes = ((_a = node) === null || _a === void 0 ? void 0 : _a.childNodes) || [];\r\n    if (childNodes.length)\r\n        return exports.generate((_b = node) === null || _b === void 0 ? void 0 : _b.childNodes, config);\r\n}\r\nconst generate = (node, config) => {\r\n    const { compress } = config;\r\n    const baseTab = `\\n`;\r\n    if (Array.isArray(node) && node.length) {\r\n        return node\r\n            .filter(filterEmptyText)\r\n            .map((v) => _serialize(v, config))\r\n            .join(compress ? \"\" : baseTab);\r\n    }\r\n    return _serialize(node, config, baseTab);\r\n};\r\nexports.generate = generate;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.traverse = exports.generate = exports.NODE_TYPES = exports.parse = void 0;\r\nconst index_1 = require(\"./parse/index\");\r\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return index_1.parse; } });\r\nconst generate_1 = require(\"./generate\");\r\nObject.defineProperty(exports, \"generate\", { enumerable: true, get: function () { return generate_1.generate; } });\r\nconst type_1 = require(\"./parse/type\");\r\nObject.defineProperty(exports, \"NODE_TYPES\", { enumerable: true, get: function () { return type_1.NODE_TYPES; } });\r\nconst traverse_1 = require(\"./parse/traverse\");\r\nObject.defineProperty(exports, \"traverse\", { enumerable: true, get: function () { return traverse_1.traverse; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.checkValidate = void 0;\r\nconst common_1 = require(\"../common\");\r\nconst traverse_1 = require(\"./traverse\");\r\nconst type_1 = require(\"./type\");\r\nconst checkValidate = (root) => {\r\n    // 遍历AST，不正确的属性将会报错\r\n    traverse_1.traverse(root, {\r\n        [type_1.NODE_TYPES.ELEMENT](node) {\r\n            if (!node.selfClosing && !node.closing) {\r\n                common_1.throwError(`${node.tagName} 标签未正确闭合，无法解析`);\r\n            }\r\n            if (node.tagName === \"wxs\") {\r\n                if (!node.attributes[\"module\"]) {\r\n                    common_1.throwError(`${node.tagName} 标签 必须具有 module 属性`);\r\n                }\r\n                if (node.childNodes.length &&\r\n                    !node.childNodes[0].textContent.includes(`module.exports`)) {\r\n                    common_1.throwError(`${node.tagName} 必须含有模块导出，如 module.exports = e.g.`);\r\n                }\r\n            }\r\n        },\r\n    });\r\n};\r\nexports.checkValidate = checkValidate;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parse = void 0;\r\nconst common_1 = require(\"../common\");\r\nconst check_1 = require(\"./check\");\r\nconst nodes_1 = require(\"./nodes\");\r\nconst token_1 = require(\"./token\");\r\nconst type_1 = require(\"./type\");\r\nconst parse = (str) => {\r\n    function ensureValidNode() {\r\n        if (!node) {\r\n            common_1.throwError(\"Unexpected null node\");\r\n        }\r\n    }\r\n    const root = {\r\n        type: type_1.NODE_TYPES.ROOT,\r\n        childNodes: [],\r\n    };\r\n    let parent = root;\r\n    let node = null;\r\n    let attributeName = \"\";\r\n    const stateMachine = {\r\n        [type_1.TYPES.TEXT](text) {\r\n            parent.childNodes.push(new nodes_1.TextNode(text, parent));\r\n        },\r\n        [type_1.TYPES.TAG_OPEN](text) {\r\n            // if (closing) {\r\n            //   const tagName = (parent as any)?.tagName;\r\n            //   if (text !== tagName) {\r\n            //     console.info(`${tagName} 与 ${text}不一致，将被替换为 ${tagName}`);\r\n            //   }\r\n            //   return;\r\n            // }\r\n            node = new nodes_1.ElementNode({ tagName: text });\r\n        },\r\n        [type_1.TYPES.TAG_CLOSE](closing, selfClosing) {\r\n            if (attributeName) {\r\n                node.attributes[attributeName] = true;\r\n                attributeName = \"\";\r\n            }\r\n            if (closing && selfClosing) {\r\n                common_1.throwError(\"Unexpected closing with selfClosing. e.g. </tag />\");\r\n            }\r\n            if (selfClosing) {\r\n                // 防止 < />的出现\r\n                ensureValidNode();\r\n                node.selfClosing = true;\r\n                parent.childNodes.push(node);\r\n                node = null;\r\n                return;\r\n            }\r\n            if (closing) {\r\n                node = parent;\r\n                // < />出现在 root 的直接子元素， 会导致 node 为空\r\n                parent = node.parentNode || root;\r\n                node.closing = true;\r\n                return;\r\n            }\r\n            parent.childNodes.push(node);\r\n            node.parentNode = parent || root;\r\n            parent = node;\r\n            node = null;\r\n        },\r\n        [type_1.TYPES.ATTRIBUTE_NAME](text) {\r\n            attributeName = text;\r\n            node.attributes[attributeName] = true;\r\n        },\r\n        [type_1.TYPES.ATTRIBUTE_VALUE](text) {\r\n            node.attributes[attributeName] = text;\r\n            attributeName = \"\";\r\n        },\r\n        [type_1.TYPES.COMMENT](comment) {\r\n            parent.childNodes.push(new nodes_1.CommentNode(comment));\r\n        },\r\n    };\r\n    function traverse(type, ...args) {\r\n        const action = stateMachine[type];\r\n        // @ts-ignore\r\n        action(...args);\r\n    }\r\n    token_1.token(str, traverse, () => ({ node, parent }));\r\n    check_1.checkValidate(root);\r\n    return root;\r\n};\r\nexports.parse = parse;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementNode = exports.TextNode = exports.CommentNode = void 0;\r\nconst type_1 = require(\"./type\");\r\nclass CommentNode extends type_1.BaseNode {\r\n    constructor(comment) {\r\n        super(type_1.NODE_TYPES.COMMENT);\r\n        this.comment = comment;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            type: this.type,\r\n            comment: this.comment,\r\n        };\r\n    }\r\n}\r\nexports.CommentNode = CommentNode;\r\nclass TextNode extends type_1.BaseNode {\r\n    constructor(text, parentNode) {\r\n        super(type_1.NODE_TYPES.TEXT);\r\n        this.textContent = text;\r\n        this.parentNode = parentNode;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            type: this.type,\r\n            textContent: this.textContent,\r\n        };\r\n    }\r\n}\r\nexports.TextNode = TextNode;\r\nclass ElementNode extends type_1.BaseNode {\r\n    constructor({ tagName = \"\" } = {}) {\r\n        super(type_1.NODE_TYPES.ELEMENT);\r\n        this.tagName = tagName;\r\n        this.attributes = {};\r\n        this.childNodes = [];\r\n        this.selfClosing = false;\r\n        this.closing = false;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            type: this.type,\r\n            tagName: this.tagName,\r\n            attributes: this.attributes,\r\n            selfClosing: this.selfClosing,\r\n            childNodes: this.childNodes.map(function (node) {\r\n                return node.toJSON();\r\n            }),\r\n        };\r\n    }\r\n}\r\nexports.ElementNode = ElementNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.token = void 0;\r\nconst common_1 = require(\"../common\");\r\nconst type_1 = require(\"./type\");\r\nvar CHAR;\r\n(function (CHAR) {\r\n    CHAR[\"LT\"] = \"<\";\r\n    CHAR[\"GT\"] = \">\";\r\n    CHAR[\"EXCLAMATION\"] = \"!\";\r\n    CHAR[\"SLASH\"] = \"/\";\r\n    CHAR[\"MINUS\"] = \"-\";\r\n    CHAR[\"BACK_SLASH\"] = \"\\\\\";\r\n    CHAR[\"SPACE\"] = \" \";\r\n    CHAR[\"TABLE\"] = \"\\t\";\r\n    CHAR[\"EQUAL\"] = \"=\";\r\n    CHAR[\"QUESTION\"] = \"?\";\r\n    CHAR[\"SINGLE_QUOTE\"] = \"'\";\r\n    CHAR[\"DOUBLE_QUOTE\"] = \"\\\"\";\r\n    CHAR[\"LINE_FEED\"] = \"\\n\";\r\n    CHAR[\"CARRIAGE_RETURN\"] = \"\\r\";\r\n    // start of mustache\r\n    CHAR[\"BRACE_LEFT\"] = \"{\";\r\n    CHAR[\"BRACE_RIGHT\"] = \"}\";\r\n    // end of mustache\r\n})(CHAR || (CHAR = {}));\r\nvar ACTIONS;\r\n(function (ACTIONS) {\r\n    ACTIONS[\"SPACE\"] = \"ACTIONS(SPACE)\";\r\n    ACTIONS[\"LT\"] = \"ACTIONS(LT)\";\r\n    ACTIONS[\"GT\"] = \"ACTIONS(GT)\";\r\n    ACTIONS[\"DOUBLE_QUOTE\"] = \"ACTIONS(DOUBLE_QUOTE)\";\r\n    ACTIONS[\"SINGLE_QUOTE\"] = \"ACTIONS(SINGLE_QUOTE)\";\r\n    ACTIONS[\"EQUAL\"] = \"ACTIONS(EQUAL)\";\r\n    ACTIONS[\"SLASH\"] = \"ACTIONS(SLASH)\";\r\n    ACTIONS[\"EXCLAMATION\"] = \"ACTIONS(EXCLAMATION)\";\r\n    ACTIONS[\"QUESTION\"] = \"ACTIONS(QUESTION)\";\r\n    ACTIONS[\"CHAR\"] = \"ACTIONS(CHAR)\";\r\n    ACTIONS[\"MINUS\"] = \"ACTIONS(MINUS)\";\r\n    ACTIONS[\"BACK_SLASH\"] = \"ACTIONS(BACK_SLASH)\";\r\n    // start of mustache\r\n    ACTIONS[\"BRACE_LEFT\"] = \"ACTIONS(BRACE_LEFT)\";\r\n    ACTIONS[\"BRACE_RIGHT\"] = \"ACTIONS(BRACE_RIGHT)\";\r\n    // end of mustache\r\n})(ACTIONS || (ACTIONS = {}));\r\nvar STATES;\r\n(function (STATES) {\r\n    STATES[\"TEXT\"] = \"STATE(TEXT)\";\r\n    STATES[\"TAG_OPEN\"] = \"STATE(TAG_OPEN)\";\r\n    STATES[\"TAG_NAME\"] = \"STATE(TAG_NAME)\";\r\n    STATES[\"ATTRIBUTE_NAME\"] = \"STATE(ATTRIBUTE_NAME)\";\r\n    STATES[\"ATTRIBUTE_VALUE\"] = \"STATE(ATTRIBUTE_VALUE)\";\r\n    STATES[\"COMMENT\"] = \"STATE(COMMENT)\";\r\n    // SCRIPT = \"STATE(SCRIPT)\",\r\n})(STATES || (STATES = {}));\r\nconst CHAR_TO_ACTIONS = {\r\n    [CHAR.SPACE]: ACTIONS.SPACE,\r\n    [CHAR.TABLE]: ACTIONS.SPACE,\r\n    [CHAR.LINE_FEED]: ACTIONS.SPACE,\r\n    [CHAR.CARRIAGE_RETURN]: ACTIONS.SPACE,\r\n    [CHAR.LT]: ACTIONS.LT,\r\n    [CHAR.GT]: ACTIONS.GT,\r\n    [CHAR.DOUBLE_QUOTE]: ACTIONS.DOUBLE_QUOTE,\r\n    [CHAR.SINGLE_QUOTE]: ACTIONS.SINGLE_QUOTE,\r\n    [CHAR.EQUAL]: ACTIONS.EQUAL,\r\n    [CHAR.SLASH]: ACTIONS.SLASH,\r\n    [CHAR.EXCLAMATION]: ACTIONS.EXCLAMATION,\r\n    [CHAR.QUESTION]: ACTIONS.QUESTION,\r\n    [CHAR.MINUS]: ACTIONS.MINUS,\r\n    [CHAR.BACK_SLASH]: ACTIONS.BACK_SLASH,\r\n    // start of mustache\r\n    [CHAR.BRACE_LEFT]: ACTIONS.BRACE_LEFT,\r\n    [CHAR.BRACE_RIGHT]: ACTIONS.BRACE_RIGHT,\r\n    // end of mustache\r\n};\r\nconst token = (input, traverse, getNode) => {\r\n    const len = input.length;\r\n    let column = 1;\r\n    let line = 1;\r\n    let i = 0;\r\n    let text = \"\";\r\n    let state = STATES.TEXT;\r\n    let closing = false;\r\n    let selfClosing = false;\r\n    let quote;\r\n    function addText(char) {\r\n        text += char;\r\n    }\r\n    function ensureEmptyText() {\r\n        if (text) {\r\n            throw new Error(\"Unexpected text: \" + text);\r\n        }\r\n    }\r\n    function createUnexpected(state, action) {\r\n        return function unexpected(char) {\r\n            throw new Error(\"Unexpected char `\" +\r\n                char +\r\n                \"` in state `\" +\r\n                state +\r\n                \"` with action `\" +\r\n                action +\r\n                \"`\" +\r\n                \"line:\" +\r\n                line +\r\n                \",column:\" +\r\n                column);\r\n        };\r\n    }\r\n    // wxs内部，不支持嵌套标签，所以需要判断引号\r\n    // 正常情况下需要保留引号，addText\r\n    const getQuoteHandle = (char) => {\r\n        const { parent } = getNode();\r\n        const isWxs = (parent === null || parent === void 0 ? void 0 : parent.tagName) === \"wxs\";\r\n        if (isWxs) {\r\n            if (!quote) {\r\n                quote = char;\r\n                addText(char);\r\n                return;\r\n            }\r\n            if (quote === char) {\r\n                quote = \"\";\r\n                addText(char);\r\n            }\r\n            else {\r\n                addText(char);\r\n            }\r\n        }\r\n        else {\r\n            addText(char);\r\n        }\r\n    };\r\n    const getHandleByType = () => {\r\n        const currentType = type_1.TYPES.ATTRIBUTE_VALUE;\r\n        const nextState = STATES.ATTRIBUTE_NAME;\r\n        const quoteHandle = (char) => {\r\n            if (!quote) {\r\n                quote = char;\r\n                return;\r\n            }\r\n            if (quote === char) {\r\n                traverse(currentType, text);\r\n                quote = \"\";\r\n                text = \"\";\r\n                state = nextState;\r\n                return;\r\n            }\r\n            addText(char);\r\n        };\r\n        return {\r\n            [ACTIONS.DOUBLE_QUOTE]: quoteHandle,\r\n            [ACTIONS.SINGLE_QUOTE]: quoteHandle,\r\n            [ACTIONS.SPACE](char) {\r\n                if (quote) {\r\n                    addText(char);\r\n                    return;\r\n                }\r\n                if (!text) {\r\n                    // `<div id= ` or `<div id  `\r\n                    return;\r\n                }\r\n                traverse(currentType, text);\r\n                text = \"\";\r\n                state = nextState;\r\n            },\r\n            [ACTIONS.GT](char) {\r\n                if (quote) {\r\n                    addText(char);\r\n                    return;\r\n                }\r\n                // end of a attribute value\r\n                traverse(currentType, text);\r\n                text = \"\";\r\n                traverse(type_1.TYPES.TAG_CLOSE, closing, selfClosing);\r\n                closing = false;\r\n                selfClosing = false;\r\n                state = STATES.TEXT;\r\n            },\r\n            [ACTIONS.BACK_SLASH]() {\r\n                // 反斜杠，如果不做处理，比如 \"name: sd\\\"\\\";style=sd\"，将会被提前中断，产生错误\r\n                if (quote && input[i + 1] === quote) {\r\n                    text += `\\\\` + quote;\r\n                    i++;\r\n                    column++;\r\n                }\r\n            },\r\n            [ACTIONS.CHAR]: addText,\r\n        };\r\n    };\r\n    const stateMachine = {\r\n        [STATES.TEXT]: {\r\n            [ACTIONS.CHAR](char) {\r\n                addText(char);\r\n                if (i === len - 1) {\r\n                    // the end\r\n                    traverse(type_1.TYPES.TEXT, text);\r\n                    text = \"\";\r\n                }\r\n            },\r\n            [ACTIONS.LT](char) {\r\n                // 可能处于wxs内部，所以需要判断\r\n                const { parent } = getNode();\r\n                const isWxs = parent.tagName === \"wxs\";\r\n                if (isWxs && quote) {\r\n                    addText(char);\r\n                    return;\r\n                }\r\n                const nextChar = input[i + 1];\r\n                // << 或者 <>，表示是普通文本\r\n                if (nextChar === CHAR.LT || nextChar === CHAR.GT) {\r\n                    addText(char);\r\n                    return;\r\n                }\r\n                // 识别为标签，处理之前的文本，然后将其清空\r\n                if (text) {\r\n                    traverse(type_1.TYPES.TEXT, text);\r\n                    text = \"\";\r\n                }\r\n                state = STATES.TAG_OPEN;\r\n            },\r\n            [ACTIONS.DOUBLE_QUOTE]: getQuoteHandle,\r\n            [ACTIONS.SINGLE_QUOTE]: getQuoteHandle,\r\n        },\r\n        [STATES.TAG_OPEN]: {\r\n            [ACTIONS.SPACE]: common_1.NOOP,\r\n            [ACTIONS.LT]: createUnexpected(\"TAG_OPEN\", \"LT\"),\r\n            [ACTIONS.GT]: createUnexpected(\"TAG_OPEN\", \"GT\"),\r\n            [ACTIONS.SINGLE_QUOTE]: createUnexpected(\"TAG_OPEN\", \"SINGLE_QUOTE\"),\r\n            [ACTIONS.DOUBLE_QUOTE]: createUnexpected(\"TAG_OPEN\", \"DOUBLE_QUOTE\"),\r\n            [ACTIONS.EQUAL]: createUnexpected(\"TAG_OPEN\", \"EQUAL\"),\r\n            [ACTIONS.QUESTION]: createUnexpected(\"TAG_OPEN\", \"EQUAL\"),\r\n            [ACTIONS.BRACE_LEFT]: createUnexpected(\"TAG_OPEN\", \"BRACE_LEFT\"),\r\n            [ACTIONS.BRACE_RIGHT]: createUnexpected(\"TAG_OPEN\", \"BRACE_RIGHT\"),\r\n            // tagName，以上皆为歪门邪道\r\n            [ACTIONS.CHAR](char) {\r\n                closing = false;\r\n                state = STATES.TAG_NAME;\r\n                // 非必要，逻辑演进时，不需要检查文本\r\n                ensureEmptyText();\r\n                addText(char);\r\n                // 进入 tagName 阶段\r\n            },\r\n            // 左斜杠/，标签闭合\r\n            [ACTIONS.SLASH]() {\r\n                closing = true;\r\n                state = STATES.TAG_NAME;\r\n            },\r\n            // ! ，可能为注释\r\n            [ACTIONS.EXCLAMATION](char) {\r\n                if (input[i + 1] === CHAR.MINUS && input[i + 2] === CHAR.MINUS) {\r\n                    state = STATES.COMMENT;\r\n                    // Side effect!\r\n                    i += 2;\r\n                    return;\r\n                }\r\n                createUnexpected(\"TAG_OPEN\", \"EXCLAMATION\")(char);\r\n            },\r\n        },\r\n        [STATES.TAG_NAME]: {\r\n            [ACTIONS.CHAR]: addText,\r\n            [ACTIONS.SPACE]() {\r\n                // 非必要\r\n                if (!text) {\r\n                    // `< div`\r\n                    return;\r\n                }\r\n                // tagName结束，进入 ATTRIBUTE_NAME\r\n                traverse(type_1.TYPES.TAG_OPEN, text, closing);\r\n                text = \"\";\r\n                state = STATES.ATTRIBUTE_NAME;\r\n            },\r\n            [ACTIONS.SLASH](char) {\r\n                // / 闭合标签\r\n                if (input[i + 1] === CHAR.GT) {\r\n                    selfClosing = true;\r\n                    return;\r\n                }\r\n                createUnexpected(\"TAG_NAME\", \"SLASH\")(char);\r\n            },\r\n            [ACTIONS.GT]() {\r\n                const nextState = STATES.TEXT;\r\n                // >，标签名结束，或者是标签结束\r\n                traverse(type_1.TYPES.TAG_OPEN, text, closing);\r\n                traverse(type_1.TYPES.TAG_CLOSE, closing, selfClosing);\r\n                text = \"\";\r\n                // 重置 标签 相关状态\r\n                closing = false;\r\n                selfClosing = false;\r\n                state = nextState;\r\n            },\r\n        },\r\n        [STATES.ATTRIBUTE_NAME]: {\r\n            [ACTIONS.SPACE]() {\r\n                if (text) {\r\n                    traverse(type_1.TYPES.ATTRIBUTE_NAME, text);\r\n                    text = \"\";\r\n                }\r\n            },\r\n            [ACTIONS.EQUAL]() {\r\n                if (text) {\r\n                    // `<div id=`\r\n                    traverse(type_1.TYPES.ATTRIBUTE_NAME, text);\r\n                    text = \"\";\r\n                }\r\n                // `<div id =`\r\n                state = STATES.ATTRIBUTE_VALUE;\r\n            },\r\n            [ACTIONS.SLASH](char) {\r\n                if (input[i + 1] === CHAR.GT) {\r\n                    // `<div />`\r\n                    selfClosing = true;\r\n                    return;\r\n                }\r\n                // `<div / ` or `<div /i`\r\n                createUnexpected(\"ATTRIBUTE_NAME\", \"SLASH\")(char);\r\n            },\r\n            [ACTIONS.GT]() {\r\n                if (text) {\r\n                    // `<div id>`\r\n                    traverse(type_1.TYPES.ATTRIBUTE_NAME, text);\r\n                    text = \"\";\r\n                }\r\n                // `<div id >`\r\n                traverse(type_1.TYPES.TAG_CLOSE, closing, selfClosing);\r\n                selfClosing = false;\r\n                state = STATES.TEXT;\r\n            },\r\n            [ACTIONS.CHAR]: addText,\r\n        },\r\n        [STATES.ATTRIBUTE_VALUE]: getHandleByType(),\r\n        [STATES.COMMENT]: {\r\n            [ACTIONS.CHAR]: addText,\r\n            [ACTIONS.MINUS](char) {\r\n                if (input[i + 1] === CHAR.MINUS && input[i + 2] === CHAR.GT) {\r\n                    // Side effect!\r\n                    i += 2;\r\n                    column += 2;\r\n                    traverse(type_1.TYPES.COMMENT, text);\r\n                    text = \"\";\r\n                    state = STATES.TEXT;\r\n                    return;\r\n                }\r\n                addText(char);\r\n            },\r\n        },\r\n    };\r\n    while (i < len) {\r\n        const char = input[i];\r\n        const stateHandler = stateMachine[state];\r\n        const actionType = char in CHAR_TO_ACTIONS\r\n            ? CHAR_TO_ACTIONS[char]\r\n            : ACTIONS.CHAR;\r\n        const action = actionType in stateHandler\r\n            ? stateHandler[actionType]\r\n            : stateHandler[ACTIONS.CHAR];\r\n        if (action) {\r\n            action(char);\r\n        }\r\n        if (char === \"\\n\") {\r\n            line++;\r\n            column = 1;\r\n        }\r\n        else {\r\n            column++;\r\n        }\r\n        i++;\r\n    }\r\n};\r\nexports.token = token;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.traverse = void 0;\r\nconst type_1 = require(\"./type\");\r\nconst fn = {\r\n    [type_1.NODE_TYPES.ELEMENT](node) { },\r\n    [type_1.NODE_TYPES.TEXT](node) { },\r\n    [type_1.NODE_TYPES.COMMENT](node) { },\r\n    [type_1.NODE_TYPES.ROOT](node) { },\r\n};\r\nfunction traverse(node, visitor) {\r\n    const exec = (n) => typeof visitor[n.type] === \"function\" && visitor[n.type](n);\r\n    if (Array.isArray(node)) {\r\n        node.forEach((n) => exec(n));\r\n    }\r\n    else {\r\n        exec(node);\r\n        if (Array.isArray(node.childNodes)) {\r\n            node.childNodes.forEach((n) => exec(n));\r\n        }\r\n    }\r\n}\r\nexports.traverse = traverse;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseNode = exports.TYPES = exports.NODE_TYPES = void 0;\r\nvar NODE_TYPES;\r\n(function (NODE_TYPES) {\r\n    NODE_TYPES[NODE_TYPES[\"ELEMENT\"] = 1] = \"ELEMENT\";\r\n    NODE_TYPES[NODE_TYPES[\"TEXT\"] = 3] = \"TEXT\";\r\n    NODE_TYPES[NODE_TYPES[\"COMMENT\"] = 8] = \"COMMENT\";\r\n    NODE_TYPES[NODE_TYPES[\"ROOT\"] = 0] = \"ROOT\";\r\n})(NODE_TYPES = exports.NODE_TYPES || (exports.NODE_TYPES = {}));\r\nvar TYPES;\r\n(function (TYPES) {\r\n    TYPES[TYPES[\"TEXT\"] = 0] = \"TEXT\";\r\n    TYPES[TYPES[\"COMMENT\"] = 1] = \"COMMENT\";\r\n    TYPES[TYPES[\"TAG_OPEN\"] = 2] = \"TAG_OPEN\";\r\n    TYPES[TYPES[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\r\n    TYPES[TYPES[\"ATTRIBUTE_NAME\"] = 4] = \"ATTRIBUTE_NAME\";\r\n    TYPES[TYPES[\"ATTRIBUTE_VALUE\"] = 5] = \"ATTRIBUTE_VALUE\";\r\n    // start of mustache\r\n    TYPES[TYPES[\"MUSTACHE_OPEN\"] = 6] = \"MUSTACHE_OPEN\";\r\n    TYPES[TYPES[\"MUSTACHE_CLOSE\"] = 7] = \"MUSTACHE_CLOSE\";\r\n    // end of mustache\r\n})(TYPES = exports.TYPES || (exports.TYPES = {}));\r\nclass BaseNode {\r\n    constructor(type) {\r\n        this.type = type;\r\n        this.parentNode = null;\r\n    }\r\n}\r\nexports.BaseNode = BaseNode;\r\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from \"vscode\";\nimport {init} from \"./parseTool\";\nexport function activate(context: vscode.ExtensionContext) {\n  console.log(\"Miniso 格式化 wxml vscode 插件\");\n\n  let disposable = vscode.commands.registerCommand(\n    \"parsewxml.minisoParsewxml\",\n    () => {\n      let acEditor = vscode.window.activeTextEditor;\n\t  if (!acEditor) {\n        vscode.window.showInformationMessage(\"没有文件在编辑，小心顶哥头给你打爆！\");\n\t\treturn;\n\t  }\n      if (acEditor && acEditor.document.languageId === \"wxml\") {\n        init();\n      } else {\n        vscode.window.showInformationMessage(\"不是.wxml文件，别瞎搞\");\n      }\n    }\n  );\n  context.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["window","Position","Range","workspace","editor","doc","text","init","activeTextEditor","Error","document","getText","newText","generate","parse","start","end","lineCount","range","edit","editBuilder","error","showErrorMessage","replace","Object","defineProperty","exports","value","throwError","NOOP","message","genValueStr","type_1","filterEmptyText","node","type","NODE_TYPES","TEXT","textContent","trim","_serialize","config","prevTab","_a","_b","maxWidth","compress","nextTab","serializeByType","parentNode","tagName","COMMENT","comment","ELEMENT","attrs","keys","attributes","map","name","attrsString","join","isBreakAttr","length","beforeEndStr","beginTabEnd","selfClosing","childNodes","nodes","filter","isSingleText","childNodesString","v","key","space","reg","val","test","_","s","Array","isArray","traverse","index_1","enumerable","get","generate_1","traverse_1","checkValidate","common_1","root","closing","includes","check_1","nodes_1","token_1","str","ROOT","parent","attributeName","stateMachine","TYPES","push","TextNode","TAG_OPEN","ElementNode","TAG_CLOSE","ATTRIBUTE_NAME","ATTRIBUTE_VALUE","CommentNode","token","args","action","BaseNode","constructor","super","this","toJSON","CHAR","ACTIONS","STATES","CHAR_TO_ACTIONS","SPACE","TABLE","LINE_FEED","CARRIAGE_RETURN","LT","GT","DOUBLE_QUOTE","SINGLE_QUOTE","EQUAL","SLASH","EXCLAMATION","QUESTION","MINUS","BACK_SLASH","BRACE_LEFT","BRACE_RIGHT","input","getNode","len","quote","column","line","i","state","addText","char","createUnexpected","getQuoteHandle","nextChar","TAG_NAME","ensureEmptyText","nextState","currentType","quoteHandle","getHandleByType","stateHandler","actionType","visitor","exec","n","forEach","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","console","log","disposable","vscode","commands","registerCommand","acEditor","languageId","showInformationMessage","subscriptions"],"sourceRoot":""}